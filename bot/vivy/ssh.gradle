def sshProps = new Properties()

file("ssh.properties").withInputStream {
    sshProps.load(it)
}

remotes {
    app {
        host = sshProps.getProperty("system.host")
        user = sshProps.getProperty("app.user")
        password = sshProps.getProperty("app.pass")
    }

    system {
        host = sshProps.getProperty("system.host")
        user = sshProps.getProperty("system.user")
        password = sshProps.getProperty("system.pass")
    }
}

tasks.register('deploy') {
    group = 'distribution'
    doLast {
        ssh.run {
            session(remotes.app) {
                def appName = sshProps.getProperty("app.name")
                def appDir = sshProps.getProperty("app.dir")
                put from: "$buildDir/install/$appName", into: appDir, fileTransfer: 'scp'
            }
        }
    }
}

tasks.register('restartRemote') {
    group = 'distribution'
    dependsOn tasks.deploy
    doLast {
        ssh.run {
            session(remotes.system) {
                def appName = sshProps.getProperty("app.name")
                execute "sudo systemctl restart $appName"
            }
        }
    }
}